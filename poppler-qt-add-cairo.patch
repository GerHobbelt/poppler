From: Jeffrey Feng <galago1992@gmail.com>
Subject: 
  Add Cairo subpixel rendering backend to poppler-qt5.
  Thanks to Yichao Zhou for his subpixel patch of previous poppler-0.43.
---
git diff --stat
 qt5/demos/viewer.cpp        |  4 ++++
 qt5/src/CMakeLists.txt      | 14 ++++++++++++++
 qt5/src/poppler-document.cc |  3 +++
 qt5/src/poppler-page.cc     | 44 ++++++++++++++++++++++++++++++++++++++++++++
 qt5/src/poppler-private.cc  |  2 +-
 qt5/src/poppler-qt5.h       |  1 +
 qt5/tests/CMakeLists.txt    |  4 ++++
 qt6/demos/viewer.cpp        |  4 ++++
 qt6/src/CMakeLists.txt      | 14 ++++++++++++++
 qt6/src/poppler-document.cc |  3 +++
 qt6/src/poppler-page.cc     | 44 ++++++++++++++++++++++++++++++++++++++++++++
 qt6/src/poppler-private.cc  |  2 +-
 qt6/src/poppler-qt6.h       |  3 ++-
 qt6/tests/CMakeLists.txt    |  4 ++++
 14 files changed, 143 insertions(+), 3 deletions(-)

diff --git a/qt5/demos/viewer.cpp b/qt5/demos/viewer.cpp
index 0b1a8f0e..b4953911 100644
--- a/qt5/demos/viewer.cpp
+++ b/qt5/demos/viewer.cpp
@@ -84,6 +84,10 @@ PdfViewer::PdfViewer(QWidget *parent) : QMainWindow(parent), m_currentPage(0), m
     act->setCheckable(true);
     act->setData(QVariant::fromValue(1));
     m_settingsRenderBackendGrp->addAction(act);
+    act = settingsRenderMenu->addAction(tr("Cairo"));
+    act->setCheckable(true);
+    act->setData(QVariant::fromValue(2));
+    m_settingsRenderBackendGrp->addAction(act);
     connect(m_settingsRenderBackendGrp, &QActionGroup::triggered, this, &PdfViewer::slotRenderBackend);
 
     QMenu *helpMenu = menuBar()->addMenu(tr("&Help"));
diff --git a/qt5/src/CMakeLists.txt b/qt5/src/CMakeLists.txt
index afacd2c3..cdbe6653 100644
--- a/qt5/src/CMakeLists.txt
+++ b/qt5/src/CMakeLists.txt
@@ -4,6 +4,10 @@ include_directories(
   ${CMAKE_CURRENT_SOURCE_DIR}
   ${CMAKE_CURRENT_BINARY_DIR}
 )
+if (HAVE_CAIRO)
+  include_directories(${CAIRO_INCLUDE_DIRS})
+  add_definitions(${CAIRO_CFLAGS})
+endif (HAVE_CAIRO)
 
 set(CMAKE_C_VISIBILITY_PRESET hidden)
 set(CMAKE_CXX_VISIBILITY_PRESET hidden)
@@ -36,6 +40,13 @@ set(poppler_qt5_SRCS
   QPainterOutputDev.cc
   poppler-version.cpp
 )
+if (HAVE_CAIRO)
+  set(poppler_qt5_SRCS ${poppler_qt5_SRCS}
+    ${CMAKE_SOURCE_DIR}/poppler/CairoOutputDev.cc
+    ${CMAKE_SOURCE_DIR}/poppler/CairoRescaleBox.cc
+    ${CMAKE_SOURCE_DIR}/poppler/CairoFontEngine.cc
+  )
+endif(HAVE_CAIRO)
 add_library(poppler-qt5 ${poppler_qt5_SRCS})
 set_target_properties(poppler-qt5 PROPERTIES VERSION 1.27.0 SOVERSION 1)
 if(MINGW AND BUILD_SHARED_LIBS)
@@ -43,6 +54,9 @@ if(MINGW AND BUILD_SHARED_LIBS)
     set_target_properties(poppler-qt5 PROPERTIES SUFFIX "-${POPPLER_QT5_SOVERSION}${CMAKE_SHARED_LIBRARY_SUFFIX}")
 endif()
 target_link_libraries(poppler-qt5 poppler Qt5::Core Qt5::Gui Qt5::Xml ${FREETYPE_LIBRARIES})
+if (HAVE_CAIRO)
+    target_link_libraries(poppler-qt5 ${CAIRO_LIBRARIES})
+endif (HAVE_CAIRO)
 if(MSVC)
 target_link_libraries(poppler-qt5 poppler ${poppler_LIBS})
 endif()
diff --git a/qt5/src/poppler-document.cc b/qt5/src/poppler-document.cc
index 0a2a6ce4..561dbbec 100644
--- a/qt5/src/poppler-document.cc
+++ b/qt5/src/poppler-document.cc
@@ -695,6 +695,9 @@ QSet<Document::RenderBackend> Document::availableRenderBackends()
     ret << Document::SplashBackend;
 #endif
     ret << Document::QPainterBackend;
+#if defined(HAVE_CAIRO)
+    ret << Document::CairoBackend;
+#endif
     ret << Document::ArthurBackend; // For backward compatibility
     return ret;
 }
diff --git a/qt5/src/poppler-page.cc b/qt5/src/poppler-page.cc
index 31c60698..e3467c69 100644
--- a/qt5/src/poppler-page.cc
+++ b/qt5/src/poppler-page.cc
@@ -49,6 +49,7 @@
 #include <QtGui/QImage>
 #include <QtGui/QPainter>
 
+#include <math.h>
 #include <config.h>
 #include <poppler-config.h>
 #include <PDFDoc.h>
@@ -64,6 +65,9 @@
 #    include <SplashOutputDev.h>
 #    include <splash/SplashBitmap.h>
 #endif
+#if defined(HAVE_CAIRO)
+#    include <CairoOutputDev.h>
+#endif
 
 #include "poppler-private.h"
 #include "poppler-page-transition-private.h"
@@ -564,6 +568,44 @@ QImage Page::renderToImage(double xres, double yres, int xPos, int yPos, int w,
         img = tmpimg;
         break;
     }
+    case Poppler::Document::CairoBackend:
+    {
+#if defined(HAVE_CAIRO)
+        CairoOutputDev *output_dev = new CairoOutputDev();
+        bool subpixel_suited = m_page->page->suitSubpixelRendering (output_dev);
+        if (subpixel_suited) {
+            output_dev->setAntialias(CAIRO_ANTIALIAS_SUBPIXEL);
+        }
+        output_dev->startDoc(m_page->parentDoc->doc);
+
+        // If w or h are -1, that indicates the whole page
+        QSize size = this->pageSize();
+        int buf_width = (w == -1)? qRound( size.width() * xres / 72.0 ) : w;
+        int buf_height = (h == -1)? qRound( size.height() * yres / 72.0 ) : h;
+        // Transform the image if rotate value is specified.
+        int rotate = rotation + m_page->page->getRotate();
+        if (rotate == 90 || rotate == 270) {
+            img = QImage(buf_height, buf_width, QImage::Format_ARGB32);
+        } else {
+            img = QImage(buf_width, buf_height, QImage::Format_ARGB32);
+        }
+        img.fill(Qt::white);  // Never transparent
+
+        cairo_surface_t *surface = cairo_image_surface_create_for_data(
+            img.bits(), CAIRO_FORMAT_ARGB32, img.width(), img.height(), img.bytesPerLine());
+        cairo_t *cairo = cairo_create(surface);
+        output_dev->setCairo(cairo);
+        m_page->parentDoc->doc->displayPageSlice(output_dev, m_page->index + 1,
+            xres, yres, rotation, false, true, false, xPos, yPos, w, h);
+
+        // Clean up
+        output_dev->setCairo(NULL);
+        cairo_destroy(cairo);
+        cairo_surface_destroy(surface);
+        delete output_dev;
+#endif
+        break;
+    }
     }
 
     if (shouldAbortRenderCallback && shouldAbortRenderCallback(payload))
@@ -587,6 +629,8 @@ bool Page::renderToPainter(QPainter *painter, double xres, double yres, int x, i
 
         return renderToQPainter(&qpainter_output, painter, m_page, xres, yres, x, y, w, h, rotate, flags);
     }
+    case Poppler::Document::CairoBackend:
+        return false;
     }
     return false;
 }
diff --git a/qt5/src/poppler-private.cc b/qt5/src/poppler-private.cc
index 5b30f19c..197f778b 100644
--- a/qt5/src/poppler-private.cc
+++ b/qt5/src/poppler-private.cc
@@ -242,7 +242,7 @@ DocumentData::~DocumentData()
 
 void DocumentData::init()
 {
-    m_backend = Document::SplashBackend;
+    m_backend = Document::CairoBackend;
     paperColor = Qt::white;
     m_hints = 0;
     m_optContentModel = nullptr;
diff --git a/qt5/src/poppler-qt5.h b/qt5/src/poppler-qt5.h
index 2d879f78..bbc48ab3 100644
--- a/qt5/src/poppler-qt5.h
+++ b/qt5/src/poppler-qt5.h
@@ -1170,6 +1170,7 @@ public:
     {
         SplashBackend, ///< Splash backend
         ArthurBackend, ///< \deprecated The old name of the QPainter backend
+        CairoBackend, ///< Cairo backend
         QPainterBackend = ArthurBackend ///< @since 20.11
     };
 
diff --git a/qt5/tests/CMakeLists.txt b/qt5/tests/CMakeLists.txt
index 82ef2139..b1cc70f6 100644
--- a/qt5/tests/CMakeLists.txt
+++ b/qt5/tests/CMakeLists.txt
@@ -5,6 +5,10 @@ include_directories(
   ${CMAKE_CURRENT_SOURCE_DIR}/../src
   ${CMAKE_CURRENT_BINARY_DIR}
 )
+if (HAVE_CAIRO)
+  include_directories(${CAIRO_INCLUDE_DIRS})
+  add_definitions(${CAIRO_CFLAGS})
+endif (HAVE_CAIRO)
 
 macro(QT5_ADD_SIMPLETEST exe source)
   string(REPLACE "-" "" test_name ${exe})
diff --git a/qt6/demos/viewer.cpp b/qt6/demos/viewer.cpp
index f1cfc852..8c524bb5 100644
--- a/qt6/demos/viewer.cpp
+++ b/qt6/demos/viewer.cpp
@@ -82,6 +82,10 @@ PdfViewer::PdfViewer(QWidget *parent) : QMainWindow(parent), m_currentPage(0), m
     act->setCheckable(true);
     act->setData(QVariant::fromValue(1));
     m_settingsRenderBackendGrp->addAction(act);
+    act = settingsRenderMenu->addAction(tr("Cairo"));
+    act->setCheckable(true);
+    act->setData(QVariant::fromValue(2));
+    m_settingsRenderBackendGrp->addAction(act);
     connect(m_settingsRenderBackendGrp, &QActionGroup::triggered, this, &PdfViewer::slotRenderBackend);
 
     QMenu *helpMenu = menuBar()->addMenu(tr("&Help"));
diff --git a/qt6/src/CMakeLists.txt b/qt6/src/CMakeLists.txt
index a4cf8323..c4a20eba 100644
--- a/qt6/src/CMakeLists.txt
+++ b/qt6/src/CMakeLists.txt
@@ -4,6 +4,10 @@ include_directories(
   ${CMAKE_CURRENT_SOURCE_DIR}
   ${CMAKE_CURRENT_BINARY_DIR}
 )
+if (HAVE_CAIRO)
+  include_directories(${CAIRO_INCLUDE_DIRS})
+  add_definitions(${CAIRO_CFLAGS})
+endif (HAVE_CAIRO)
 
 set(CMAKE_C_VISIBILITY_PRESET hidden)
 set(CMAKE_CXX_VISIBILITY_PRESET hidden)
@@ -36,6 +40,13 @@ set(poppler_qt6_SRCS
   QPainterOutputDev.cc
   poppler-version.cpp
 )
+if (HAVE_CAIRO)
+  set(poppler_qt6_SRCS ${poppler_qt6_SRCS}
+    ${CMAKE_SOURCE_DIR}/poppler/CairoOutputDev.cc
+    ${CMAKE_SOURCE_DIR}/poppler/CairoRescaleBox.cc
+    ${CMAKE_SOURCE_DIR}/poppler/CairoFontEngine.cc
+  )
+endif(HAVE_CAIRO)
 add_library(poppler-qt6 ${poppler_qt6_SRCS})
 set_target_properties(poppler-qt6 PROPERTIES VERSION 1.1.0 SOVERSION 1)
 if(MINGW AND BUILD_SHARED_LIBS)
@@ -43,6 +54,9 @@ if(MINGW AND BUILD_SHARED_LIBS)
     set_target_properties(poppler-qt6 PROPERTIES SUFFIX "-${POPPLER_QT6_SOVERSION}${CMAKE_SHARED_LIBRARY_SUFFIX}")
 endif()
 target_link_libraries(poppler-qt6 poppler Qt6::Core Qt6::Gui ${FREETYPE_LIBRARIES})
+if (HAVE_CAIRO)
+    target_link_libraries(poppler-qt6 ${CAIRO_LIBRARIES})
+endif (HAVE_CAIRO)
 if(MSVC)
 target_link_libraries(poppler-qt6 poppler ${poppler_LIBS})
 endif()
diff --git a/qt6/src/poppler-document.cc b/qt6/src/poppler-document.cc
index 1a13d46d..2b8069f5 100644
--- a/qt6/src/poppler-document.cc
+++ b/qt6/src/poppler-document.cc
@@ -678,6 +678,9 @@ QSet<Document::RenderBackend> Document::availableRenderBackends()
     ret << Document::SplashBackend;
 #endif
     ret << Document::QPainterBackend;
+#if defined(HAVE_CAIRO)
+    ret << Document::CairoBackend;
+#endif
     return ret;
 }
 
diff --git a/qt6/src/poppler-page.cc b/qt6/src/poppler-page.cc
index 248b48d5..e17777b4 100644
--- a/qt6/src/poppler-page.cc
+++ b/qt6/src/poppler-page.cc
@@ -49,6 +49,7 @@
 #include <QtGui/QImage>
 #include <QtGui/QPainter>
 
+#include <math.h>
 #include <config.h>
 #include <poppler-config.h>
 #include <PDFDoc.h>
@@ -64,6 +65,9 @@
 #    include <SplashOutputDev.h>
 #    include <splash/SplashBitmap.h>
 #endif
+#if defined(HAVE_CAIRO)
+#    include <CairoOutputDev.h>
+#endif
 
 #include "poppler-private.h"
 #include "poppler-page-transition-private.h"
@@ -564,6 +568,44 @@ QImage Page::renderToImage(double xres, double yres, int xPos, int yPos, int w,
         img = tmpimg;
         break;
     }
+    case Poppler::Document::CairoBackend:
+    {
+#if defined(HAVE_CAIRO)
+        CairoOutputDev *output_dev = new CairoOutputDev();
+        bool subpixel_suited = m_page->page->suitSubpixelRendering (output_dev);
+        if (subpixel_suited) {
+            output_dev->setAntialias(CAIRO_ANTIALIAS_SUBPIXEL);
+        }
+        output_dev->startDoc(m_page->parentDoc->doc);
+
+        // If w or h are -1, that indicates the whole page
+        QSize size = this->pageSize();
+        int buf_width = (w == -1)? qRound( size.width() * xres / 72.0 ) : w;
+        int buf_height = (h == -1)? qRound( size.height() * yres / 72.0 ) : h;
+        // Transform the image if rotate value is specified.
+        int rotate = rotation + m_page->page->getRotate();
+        if (rotate == 90 || rotate == 270) {
+            img = QImage(buf_height, buf_width, QImage::Format_ARGB32);
+        } else {
+            img = QImage(buf_width, buf_height, QImage::Format_ARGB32);
+        }
+        img.fill(Qt::white);  // Never transparent
+
+        cairo_surface_t *surface = cairo_image_surface_create_for_data(
+            img.bits(), CAIRO_FORMAT_ARGB32, img.width(), img.height(), img.bytesPerLine());
+        cairo_t *cairo = cairo_create(surface);
+        output_dev->setCairo(cairo);
+        m_page->parentDoc->doc->displayPageSlice(output_dev, m_page->index + 1,
+            xres, yres, rotation, false, true, false, xPos, yPos, w, h);
+
+        // Clean up
+        output_dev->setCairo(NULL);
+        cairo_destroy(cairo);
+        cairo_surface_destroy(surface);
+        delete output_dev;
+#endif
+        break;
+    }
     }
 
     if (shouldAbortRenderCallback && shouldAbortRenderCallback(payload))
@@ -587,6 +629,8 @@ bool Page::renderToPainter(QPainter *painter, double xres, double yres, int x, i
 
         return renderToQPainter(&qpainter_output, painter, m_page, xres, yres, x, y, w, h, rotate, flags);
     }
+    case Poppler::Document::CairoBackend:
+        return false;
     }
     return false;
 }
diff --git a/qt6/src/poppler-private.cc b/qt6/src/poppler-private.cc
index c60876da..02efdb15 100644
--- a/qt6/src/poppler-private.cc
+++ b/qt6/src/poppler-private.cc
@@ -185,7 +185,7 @@ DocumentData::~DocumentData()
 
 void DocumentData::init()
 {
-    m_backend = Document::SplashBackend;
+    m_backend = Document::CairoBackend;
     paperColor = Qt::white;
     m_hints = 0;
     m_optContentModel = nullptr;
diff --git a/qt6/src/poppler-qt6.h b/qt6/src/poppler-qt6.h
index 5e34dcce..fdb3bb18 100644
--- a/qt6/src/poppler-qt6.h
+++ b/qt6/src/poppler-qt6.h
@@ -1086,7 +1086,8 @@ public:
     enum RenderBackend
     {
         SplashBackend, ///< Splash backend
-        QPainterBackend ///< Qt backend
+        QPainterBackend, ///< Qt backend
+        CairoBackend ///< Cairo backend
     };
 
     /**
diff --git a/qt6/tests/CMakeLists.txt b/qt6/tests/CMakeLists.txt
index 7f9e749e..d8779dfc 100644
--- a/qt6/tests/CMakeLists.txt
+++ b/qt6/tests/CMakeLists.txt
@@ -5,6 +5,10 @@ include_directories(
   ${CMAKE_CURRENT_SOURCE_DIR}/../src
   ${CMAKE_CURRENT_BINARY_DIR}
 )
+if (HAVE_CAIRO)
+  include_directories(${CAIRO_INCLUDE_DIRS})
+  add_definitions(${CAIRO_CFLAGS})
+endif (HAVE_CAIRO)
 
 macro(QT6_ADD_SIMPLETEST exe source)
   string(REPLACE "-" "" test_name ${exe})
